(define (problem cook_kielbasa-0)
    (:domain omnigibson)

    (:objects
        frying_pan.n.01_1 - frying_pan.n.01
        oven.n.01_1 - oven.n.01
        water.n.06_1 - water.n.06
        kielbasa.n.01_1 - kielbasa.n.01
        sink.n.01_1 - sink.n.01
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop frying_pan.n.01_1 oven.n.01_1) 
        (inside kielbasa.n.01_1 electric_refrigerator.n.01_1) 
        (not 
            (cooked kielbasa.n.01_1)
        ) 
        (insource sink.n.01_1 water.n.06_1)
        (inroom sink.n.01_1 kitchen) 
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (inroom oven.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (cooked ?kielbasa.n.01_1)
        )
    )
)