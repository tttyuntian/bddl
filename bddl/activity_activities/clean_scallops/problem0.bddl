(define (problem clean_scallops-0)
    (:domain omnigibson)

    (:objects
        tupperware.n.01_1 - tupperware.n.01
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        scallop.n.02_1 scallop.n.02_2 scallop.n.02_3 - scallop.n.02
        sand.n.04_1 - sand.n.04
        rag.n.01_1 - rag.n.01
        cabinet.n.01_1 - cabinet.n.01
        water.n.06_1 - water.n.06
        sink.n.01_1 - sink.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (inside tupperware.n.01_1 electric_refrigerator.n.01_1) 
        (covered scallop.n.02_1 sand.n.04_1)
        (covered scallop.n.02_2 sand.n.04_1)
        (covered scallop.n.02_3 sand.n.04_1)
        (inside scallop.n.02_1 tupperware.n.01_1) 
        (inside scallop.n.02_2 tupperware.n.01_1) 
        (inside scallop.n.02_3 tupperware.n.01_1) 
        (inside rag.n.01_1 cabinet.n.01_1) 
        (insource sink.n.01_1 water.n.06_1) 
        (inroom cabinet.n.01_1 kitchen) 
        (inroom sink.n.01_1 kitchen) 
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forall 
                (?scallop.n.02 - scallop.n.02) 
                (not 
                    (covered ?scallop.n.02 ?sand.n.04_1)
                )
            )
        )
    )
)