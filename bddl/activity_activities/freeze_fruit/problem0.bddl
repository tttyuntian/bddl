(define (problem freeze_fruit-0)
    (:domain omnigibson)

    (:objects
        tupperware.n.01_1 tupperware.n.01_2 - tupperware.n.01
        cabinet.n.01_1 - cabinet.n.01
        bowl.n.01_1 - bowl.n.01
        countertop.n.01_1 - countertop.n.01
        apple.n.01_1 apple.n.01_2 - apple.n.01
        tray.n.01_1 - tray.n.01
        strawberry.n.01_1 strawberry.n.01_2 - strawberry.n.01
        floor.n.01_1 - floor.n.01
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (inside tupperware.n.01_1 cabinet.n.01_1) 
        (inside tupperware.n.01_2 cabinet.n.01_1) 
        (ontop bowl.n.01_1 countertop.n.01_1) 
        (inside apple.n.01_1 bowl.n.01_1) 
        (inside apple.n.01_2 bowl.n.01_1) 
        (ontop tray.n.01_1 countertop.n.01_1) 
        (ontop strawberry.n.01_1 tray.n.01_1) 
        (ontop strawberry.n.01_2 tray.n.01_1)
        (inroom floor.n.01_1 kitchen)
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (inroom countertop.n.01_1 kitchen) 
        (inroom cabinet.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forpairs 
                (?apple.n.01 - apple.n.01) 
                (?tupperware.n.01 - tupperware.n.01) 
                (inside ?apple.n.01 ?tupperware.n.01)
            ) 
            (forpairs 
                (?strawberry.n.01 - strawberry.n.01) 
                (?tupperware.n.01 - tupperware.n.01) 
                (inside ?strawberry.n.01 ?tupperware.n.01)
            )
            (forall 
                (?apple.n.01 - apple.n.01) 
                (frozen ?apple.n.01)
            ) 
            (forall 
                (?strawberry.n.01 - strawberry.n.01) 
                (frozen ?strawberry.n.01)
            )
            (forall 
                (?tupperware.n.01 - tupperware.n.01) 
                (inside ?tupperware.n.01 ?electric_refrigerator.n.01_1)
            ) 
        )
    )
)