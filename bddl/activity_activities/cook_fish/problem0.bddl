(define (problem cook_fish-0)
    (:domain omnigibson)

    (:objects
        casserole.n.02_1 - casserole.n.02
        oven.n.01_1 - oven.n.01
        salt.n.02_1 - salt.n.02
        salt__shaker.n.01_1 - salt__shaker.n.01
        salmon.n.03_1 - salmon.n.03
        diced__lemon.n.01_1 - diced__lemon.n.01
        bowl.n.01_1 bowl.n.01_2 - bowl.n.01
        clove.n.03_1 clove.n.03_2 clove.n.03_3 - clove.n.03
        tupperware.n.01_1 - tupperware.n.01
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        floor.n.01_1 - floor.n.01
        cabinet.n.01_1 - cabinet.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop casserole.n.02_1 oven.n.01_1) 
        (insource salt__shaker.n.01_1 salt.n.02_1)
        (inside salt__shaker.n.01_1 cabinet.n.01_1)
        (inside salmon.n.03_1 tupperware.n.01_1)
        (inside tupperware.n.01_1 electric_refrigerator.n.01_1)
        (filled bowl.n.01_1 diced__lemon.n.01_1)
        (inside bowl.n.01_1 electric_refrigerator.n.01_1)
        (inside clove.n.03_1 bowl.n.01_2) 
        (inside clove.n.03_2 bowl.n.01_2) 
        (inside clove.n.03_3 bowl.n.01_2)
        (inside bowl.n.01_2 electric_refrigerator.n.01_1) 
        (not 
            (cooked salmon.n.03_1)
        ) 
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (inroom oven.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (inroom cabinet.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (cooked ?salmon.n.03_1)
            (inside ?salmon.n.03_1 ?casserole.n.02_1)
            (covered ?salmon.n.03_1 ?salt.n.02_1)
            (contains ?casserole.n.02_1 ?diced__lemon.n.01_1)
        )
    )
)
