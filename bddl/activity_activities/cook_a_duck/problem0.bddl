(define (problem cook_a_duck-0)
    (:domain omnigibson)

    (:objects
        chopping_board.n.01_1 - chopping_board.n.01
        oven.n.01_1 - oven.n.01
        duck.n.03_1 - duck.n.03
        clove.n.03_1 clove.n.03_2 clove.n.03_3 clove.n.03_4 - clove.n.03
        wine_sauce.n.01_1 - wine_sauce.n.01
        wine_sauce__bottle.n.01_1 - wine_sauce__bottle.n.01
        saucepot.n.01_1 - saucepot.n.01
        bowl.n.01_1 - bowl.n.01
        floor.n.01_1 - floor.n.01
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        cabinet.n.01_1 - cabinet.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop chopping_board.n.01_1 oven.n.01_1) 
        (inside duck.n.03_1 electric_refrigerator.n.01_1)
        (insource wine_sauce__bottle.n.01_1 wine_sauce.n.01_1)
        (inside wine_sauce__bottle.n.01_1 electric_refrigerator.n.01_1) 
        (inside clove.n.03_1 bowl.n.01_1) 
        (inside clove.n.03_2 bowl.n.01_1) 
        (inside clove.n.03_3 bowl.n.01_1) 
        (inside clove.n.03_4 bowl.n.01_1) 
        (inside bowl.n.01_1 electric_refrigerator.n.01_1)
        (not 
            (cooked duck.n.03_1)
        ) 
        (inside saucepot.n.01_1 cabinet.n.01_1)
        (inroom oven.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen)
        (inroom cabinet.n.01_1 kitchen) 
        (inroom electric_refrigerator.n.01_1 kitchen)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (cooked ?duck.n.03_1)
            (covered ?duck.n.03_1 ?wine_sauce.n.01_1)
            (forall 
                (?clove.n.03 - clove.n.03)
                (and 
                    (touching ?clove.n.03 ?duck.n.03_1)
                    (cooked ?clove.n.03)
                    (covered ?clove.n.03 ?wine_sauce.n.01_1)
                )
            )
        )
    )
)