(define (problem make_pastry-0)
    (:domain omnigibson)

    (:objects
        water.n.06_1 - water.n.06
        butter.n.01_1 - butter.n.01
        flour.n.01_1 - flour.n.01
        salt.n.02_1 - salt.n.02
        food_processor.n.01_1 - food_processor.n.01
        pastry.n.01_1 - pastry.n.01
        butter__package.n.01_1 - butter__package.n.01
        flour__sack.n.01_1 - flour__sack.n.01
        salt__shaker.n.01_1 - salt__shaker.n.01
        countertop.n.01_1 countertop.n.01_2 - countertop.n.01
        cabinet.n.01_1 - cabinet.n.01
        wooden_spoon.n.02_1 - wooden_spoon.n.02
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        sink.n.01_1 - sink.n.01
        agent.n.01_1 - agent.n.01
        floor.n.01_1 - floor.n.01
    )
    
    (:init 
        (inside butter.n.01_1 butter__package.n.01_1) 
        (inside butter__package.n.01_1 electric_refrigerator.n.01_1) 
        (filled flour__sack.n.01_1 flour.n.01_1) 
        (ontop flour__sack.n.01_1 countertop.n.01_1) 
        (insource salt__shaker.n.01_1 salt.n.02_1)
        (ontop salt__shaker.n.01_1 countertop.n.01_1)
        (ontop food_processor.n.01_1 countertop.n.01_2) 
        (ontop wooden_spoon.n.02_1 cabinet.n.01_1)
        (insource sink.n.01_1 water.n.06_1) 
        (inroom sink.n.01_1 kitchen) 
        (inroom cabinet.n.01_1 kitchen) 
        (inroom countertop.n.01_1 kitchen) 
        (inroom countertop.n.01_2 kitchen) 
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (future pastry.n.01_1) 
        (inroom floor.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (real ?pastry.n.01_1)
        )
    )
)
