(define (problem gathering_nuts-0)
    (:domain omnigibson)

    (:objects
        floor.n.01_1 - floor.n.01
        walnut.n.01_1 walnut.n.01_2 walnut.n.01_3 walnut.n.01_4 walnut.n.01_5 walnut.n.01_6 walnut.n.01_7 walnut.n.01_8 - walnut.n.01
        bucket.n.01_1 bucket.n.01_2 - bucket.n.01
        tree.n.01_1 tree.n.01_2 - tree.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop walnut.n.01_1 floor.n.01_1)
        (ontop walnut.n.01_2 floor.n.01_1) 
        (ontop walnut.n.01_3 floor.n.01_1) 
        (ontop walnut.n.01_4 floor.n.01_1) 
        (ontop walnut.n.01_5 floor.n.01_1) 
        (ontop walnut.n.01_6 floor.n.01_1) 
        (ontop walnut.n.01_7 floor.n.01_1) 
        (ontop walnut.n.01_8 floor.n.01_1) 
        (ontop bucket.n.01_1 floor.n.01_1) 
        (ontop bucket.n.01_2 floor.n.01_1) 
        (inroom floor.n.01_1 garden) 
        (inroom tree.n.01_1 garden) 
        (inroom tree.n.01_2 garden) 
        (ontop agent.n.01_1 floor.n.01_1)
    
    )
    
    (:goal 
        (and 
            (forall 
                (?walnut.n.01 - walnut.n.01)
                (exists 
                    (?bucket.n.01 - bucket.n.01)
                    (inside ?walnut.n.01 ?bucket.n.01)
                )
            )
            (forpairs 
                (?tree.n.01 - tree.n.01) 
                (?bucket.n.01 - bucket.n.01) 
                (nextto ?bucket.n.01 ?tree.n.01)
    
            ) 
        )
    )
)