(define (problem fill_a_bucket_in_a_small_sink-0)
    (:domain omnigibson)

    (:objects
     	water.n.06_1 - water.n.06
    	sink.n.01_1 - sink.n.01
    	bucket.n.01_1 - bucket.n.01
    	floor.n.01_1 - floor.n.01
    	agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop bucket.n.01_1 floor.n.01_1) 
        (insource sink.n.01_1 water.n.06_1) 
        (inroom floor.n.01_1 bathroom) 
        (inroom sink.n.01_1 bathroom) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (and 
                (filled ?bucket.n.01_1 ?water.n.06_1)
            )
        )
    )
)