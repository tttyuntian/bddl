(define (problem cook_clams-0)
    (:domain omnigibson)

    (:objects
        saucepan.n.01_1 - saucepan.n.01
        stove.n.01_1 - stove.n.01
        bowl.n.01_1 - bowl.n.01
        clam.n.03_1 clam.n.03_2 clam.n.03_3 - clam.n.03
        salt.n.02_1 - salt.n.02
        salt__shaker.n.01_1 - salt__shaker.n.01
        lemon_juice.n.01_1 - lemon_juice.n.01
        lemon_juice__bottle.n.01_1 - lemon_juice__bottle.n.01
        countertop.n.01_1 - countertop.n.01
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop saucepan.n.01_1 stove.n.01_1) 
        (inside bowl.n.01_1 electric_refrigerator.n.01_1) 
        (inside clam.n.03_1 bowl.n.01_1)
        (inside clam.n.03_2 bowl.n.01_1)
        (inside clam.n.03_3 bowl.n.01_1)
        (not 
            (cooked clam.n.03_1)
        ) 
        (not 
            (cooked clam.n.03_2)
        ) 
        (not 
            (cooked clam.n.03_3)
        ) 
        (insource salt__shaker.n.01_1 salt.n.02_1)
        (ontop salt__shaker.n.01_1 countertop.n.01_1)
        (filled lemon_juice__bottle.n.01_1 lemon_juice.n.01_1)
        (inside lemon_juice__bottle.n.01_1 electric_refrigerator.n.01_1)
        (inroom stove.n.01_1 kitchen) 
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (inroom countertop.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forall 
                (?clam.n.03 - clam.n.03)
                (and
                    (cooked ?clam.n.03)
                    (covered ?clam.n.03 ?salt.n.02_1)
                    (covered ?clam.n.03 ?lemon_juice.n.01_1)
                )
            )
        )
    )
)
