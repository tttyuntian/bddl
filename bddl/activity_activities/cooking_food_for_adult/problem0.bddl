(define (problem cooking_food_for_adult-0)
    (:domain omnigibson)

    (:objects
        steak.n.01_1 - steak.n.01
        frying_pan.n.01_1 - frying_pan.n.01
        thyme.n.02_1 - thyme.n.02
        thyme__shaker.n.01_1 - thyme__shaker.n.01
        plate.n.04_1 - plate.n.04
        countertop.n.01_1 - countertop.n.01
        cooking_oil.n.01_1 - cooking_oil.n.01
        cooking_oil__bottle.n.01_1 - cooking_oil__bottle.n.01
        stove.n.01_1 - stove.n.01
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (inside steak.n.01_1 electric_refrigerator.n.01_1) 
        (not 
            (cooked steak.n.01_1)
        )
        (insource thyme__shaker.n.01_1 thyme.n.02_1)
        (ontop thyme__shaker.n.01_1 countertop.n.01_1) 
        (ontop plate.n.04_1 countertop.n.01_1) 
        (filled cooking_oil__bottle.n.01_1 cooking_oil.n.01_1) 
        (ontop cooking_oil__bottle.n.01_1 countertop.n.01_1)
        (ontop frying_pan.n.01_1 stove.n.01_1) 
        (inroom stove.n.01_1 kitchen) 
        (inroom countertop.n.01_1 kitchen) 
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (cooked ?steak.n.01_1)
            (ontop ?steak.n.01_1 ?plate.n.04_1)
            (covered ?steak.n.01_1 ?cooking_oil.n.01_1)
            (covered ?steak.n.01_1 ?thyme.n.02_1)
        )
    )
)