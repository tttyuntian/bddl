(define (problem cook_snap_peas-0)
    (:domain omnigibson)

    (:objects
        cheese_sauce.n.01_1 - cheese_sauce.n.01
        white_sauce__bottle.n.01_1 - white_sauce__bottle.n.01
        cabinet.n.01_1 - cabinet.n.01
        pea_pod.n.01_1 pea_pod.n.01_2 pea_pod.n.01_3 pea_pod.n.01_4 - pea_pod.n.01
        oven.n.01_1 - oven.n.01
        bowl.n.01_1 - bowl.n.01
        casserole.n.02_1 - casserole.n.02
        floor.n.01_1 - floor.n.01
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (insource white_sauce__bottle.n.01_1 cheese_sauce.n.01_1)
        (inside white_sauce__bottle.n.01_1 cabinet.n.01_1)
        (inside pea_pod.n.01_1 bowl.n.01_1) 
        (inside pea_pod.n.01_2 bowl.n.01_1) 
        (inside pea_pod.n.01_3 bowl.n.01_1) 
        (inside pea_pod.n.01_4 bowl.n.01_1)
        (not 
            (cooked pea_pod.n.01_1)
        ) 
        (not 
            (cooked pea_pod.n.01_2)
        ) 
        (not 
            (cooked pea_pod.n.01_3)
        ) 
        (not 
            (cooked pea_pod.n.01_4)
        )
        (inside bowl.n.01_1 electric_refrigerator.n.01_1)
        (inside casserole.n.02_1 cabinet.n.01_1) 
        (inroom floor.n.01_1 kitchen) 
        (inroom oven.n.01_1 kitchen) 
        (inroom cabinet.n.01_1 kitchen) 
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forall 
                (?pea_pod.n.01 - pea_pod.n.01)
                (and 
                    (cooked ?pea_pod.n.01)
                    (covered ?pea_pod.n.01 ?cheese_sauce.n.01_1)
                )
            )
        )
    )
)