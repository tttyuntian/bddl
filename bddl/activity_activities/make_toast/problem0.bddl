(define (problem make_toast-0)
    (:domain omnigibson)

    (:objects
        toaster.n.02_1 - toaster.n.02
        countertop.n.01_1 - countertop.n.01
        bread_slice.n.01_1 bread_slice.n.01_2 - bread_slice.n.01
        floor.n.01_1 - floor.n.01
        cabinet.n.01_1 - cabinet.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop toaster.n.02_1 countertop.n.01_1) 
        (inside bread_slice.n.01_1 cabinet.n.01_1) 
        (inside bread_slice.n.01_2 cabinet.n.01_1) 
        (inroom countertop.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (inroom cabinet.n.01_1 kitchen)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forall 
                (?bread_slice.n.01 - bread_slice.n.01)
                (cooked ?bread_slice.n.01)
            )
        )
    )
)