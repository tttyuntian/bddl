(define (problem cook_a_pumpkin-0)
    (:domain omnigibson)

    (:objects
        chopping_board.n.01_1 - chopping_board.n.01
        oven.n.01_1 - oven.n.01
        pumpkin.n.02_1 - pumpkin.n.02
        casserole.n.02_1 - casserole.n.02
        butter.n.01_1 - butter.n.01
        melted__butter.n.01_1 - melted__butter.n.01
        floor.n.01_1 - floor.n.01
        countertop.n.01_1 - countertop.n.01
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        tupperware.n.01_1 - tupperware.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop chopping_board.n.01_1 countertop.n.01_1) 
        (inside pumpkin.n.02_1 electric_refrigerator.n.01_1) 
        (inside butter.n.01_1 tupperware.n.01_1) 
        (inside tupperware.n.01_1 electric_refrigerator.n.01_1)
        (not 
            (cooked pumpkin.n.02_1)
        )
        (ontop casserole.n.02_1 countertop.n.01_1)
        (future melted__butter.n.01_1)
        (inroom oven.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (inroom countertop.n.01_1 kitchen) 
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (real ?melted__butter.n.01_1)
            (cooked ?pumpkin.n.02_1)
            (covered ?pumpkin.n.02_1 ?melted__butter.n.01_1)
        )
    )
)