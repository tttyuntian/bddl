(define (problem clean_a_crab-0)
    (:domain omnigibson)

    (:objects
        tupperware.n.01_1 - tupperware.n.01
        cabinet.n.01_1 - cabinet.n.01
        crab.n.05_1 - crab.n.05
        sand.n.04_1 - sand.n.04
        rag.n.01_1 - rag.n.01
        countertop.n.01_1 - countertop.n.01
        sink.n.01_1 - sink.n.01
        water.n.06_1 - water.n.06
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (inside tupperware.n.01_1 cabinet.n.01_1) 
        (inside crab.n.05_1 tupperware.n.01_1)
        (covered crab.n.05_1 sand.n.04_1)
        (insource sink.n.01_1 water.n.06_1) 
        (ontop rag.n.01_1 countertop.n.01_1)
        (inroom cabinet.n.01_1 kitchen) 
        (inroom floor.n.01_1 kitchen) 
        (inroom countertop.n.01_1 kitchen)
        (inroom sink.n.01_1 kitchen)
        (ontop agent.n.01_1 floor.n.01_1) 
    )
    
    (:goal 
        (and 
            (not 
                (covered ?crab.n.05_1 ?sand.n.04_1)
            )
        )
    )
)