(define (problem clean_clams-0)
    (:domain omnigibson)

    (:objects
        clam.n.03_1 clam.n.03_2 - clam.n.03
        electric_refrigerator.n.01_1 - electric_refrigerator.n.01
        countertop.n.01_1 - countertop.n.01
        bowl.n.01_1 - bowl.n.01
        rag.n.01_1 - rag.n.01
        sand.n.04_1 - sand.n.04
        water.n.06_1 - water.n.06
        sink.n.01_1 - sink.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (inside clam.n.03_1 bowl.n.01_1)
        (inside clam.n.03_2 bowl.n.01_1)
        (covered clam.n.03_1 sand.n.04_1)
        (covered clam.n.03_2 sand.n.04_1)
        (ontop rag.n.01_1 countertop.n.01_1)
        (ontop bowl.n.01_1 countertop.n.01_1)
        (insource sink.n.01_1 water.n.06_1)
        (inroom electric_refrigerator.n.01_1 kitchen) 
        (inroom countertop.n.01_1 kitchen)
        (inroom floor.n.01_1 kitchen) 
        (inroom sink.n.01_1 kitchen)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forall 
                (?clam.n.03 - clam.n.03)
                (not 
                    (covered ?clam.n.03 ?sand.n.04_1)
                )
            )
        )
    )
)