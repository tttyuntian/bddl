(define (problem wrap_silverware-0)
    (:domain omnigibson)

    (:objects
        table_knife.n.01_1 table_knife.n.01_2 table_knife.n.01_3 - table_knife.n.01
        cabinet.n.01_1 - cabinet.n.01
        tablespoon.n.02_1 tablespoon.n.02_2 tablespoon.n.02_3 - tablespoon.n.02
        napkin.n.01_1 napkin.n.01_2 napkin.n.01_3 - napkin.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (inside table_knife.n.01_1 cabinet.n.01_1) 
        (inside table_knife.n.01_2 cabinet.n.01_1) 
        (inside table_knife.n.01_3 cabinet.n.01_1) 
        (inside tablespoon.n.02_1 cabinet.n.01_1) 
        (inside tablespoon.n.02_2 cabinet.n.01_1) 
        (inside tablespoon.n.02_3 cabinet.n.01_1) 
        (inside napkin.n.01_1 cabinet.n.01_1) 
        (inside napkin.n.01_2 cabinet.n.01_1) 
        (inside napkin.n.01_3 cabinet.n.01_1) 
        (inroom floor.n.01_1 kitchen) 
        (inroom cabinet.n.01_1 kitchen) 
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (forpairs 
                (?napkin.n.01 - napkin.n.01)
                (?table_knife.n.01 - table_knife.n.01)
                (and 
                    (overlaid ?napkin.n.01 ?table_knife.n.01)
                    (inside ?table_knife.n.01 ?cabinet.n.01_1)
                )
            )
            (forpairs 
                (?napkin.n.01 - napkin.n.01)
                (?tablespoon.n.02 - tablespoon.n.02)
                (and 
                    (overlaid ?napkin.n.01 ?tablespoon.n.02)
                    (inside ?tablespoon.n.02 ?cabinet.n.01_1)
                )
            )
        )
    )
)